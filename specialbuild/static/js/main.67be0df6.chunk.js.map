{"version":3,"sources":["components/helpers/ControlledInput.js","utils/validators.js","components/Login.js","components/Register.js","components/Header.js","components/dashboard/TasksByCategory.js","components/dashboard/TasksByPriority.js","utils/toReadableDate.js","history.js","components/dashboard/UrgentTasks.js","components/dashboard/Dashboard.js","components/projects/ProjectListItem.js","components/projects/NewProject.js","components/projects/Projects.js","utils/isDateInPast.js","utils/isDateWithinOneWeek.js","components/tasks/Task.js","components/tasks/NewTask.js","components/projects/Project.js","components/App.js","index.js"],"names":["ControlledInput","props","useState","touched","setTouched","useEffect","submitClicked","mb","isInvalid","error","label","textarea","onBlur","e","type","onChange","setValue","target","value","formHelperText","validateEmail","email","test","Login","history","useHistory","setEmail","password","setPassword","errors","setErrors","setSubmitClicked","errEmail","errPassword","length","console","log","validateForm","handleSubmit","a","preventDefault","axios","post","res","data","token","localStorage","setItem","setIsSignedIn","push","request","status","response","className","justifyContent","alignItems","w","h","bg","padding","borderRadius","textAlign","onSubmit","mt","fontSize","color","to","as","_hover","Register","name","setName","sampleData","setSampleData","errName","validateName","validatePassword","headers","getItem","alert","message","display","isChecked","Header","window","location","pathname","handleLogOut","removeItem","p","flexDirection","colorScheme","isSignedIn","onClick","renderActiveShape","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","fill","payload","percent","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","x","y","dy","Sector","d","stroke","r","toFixed","TasksByCategory","activeIndex","setActiveIndex","parseInt","onPieEnter","useCallback","_","index","PieChart","width","height","Pie","activeShape","dataKey","onMouseEnter","TasksByPriority","BarChart","CartesianGrid","strokeDasharray","XAxis","YAxis","Tooltip","Bar","toReadableDate","timestamp","split","createBrowserHistory","UrgentTasks","tasks","sm","md","lg","xl","variant","map","task","tagBgColor","tagColor","task_priority","task_project","cursor","task_title","task_description","size","bgColor","task_due_date","Dashboard","tasksByCategory","setTasksByCategory","tasksByPriority","setTasksByPriority","urgentTasks","setUrgentTasks","fetchData","get","m","pt","ProjectListItem","project","setRefetchData","loading","setLoading","handleDelete","delete","project_id","borderWidth","overflow","borderColor","fontWeight","project_title","px","project_status","project_description","flexWrap","Button","rightIcon","ChevronDown","NewProject","formOpen","setFormOpen","title","setTitle","description","setDescription","errTitle","errDescription","minH","borderStyle","te","isLoading","Add","Projects","projects","setProjects","refetchData","renderProjectsList","isDateInPast","dateString","currentDate","Date","date","getTime","isDateWithinOneWeek","Task","editMode","setEditMode","priority","setPriority","task_category","category","setCategory","task_status","setStatus","dueDate","setDueDate","newTitle","setNewTitle","newDescription","setNewDescription","newPriority","setNewPriority","newCategory","setNewCategory","newStatus","setNewStatus","newDueDate","setNewDueDate","overdue","urgent","styles","setStyles","newStyles","setAllStyles","handleSave","put","task_id","due_date","maxW","lineHeight","isTruncated","letterSpacing","textTransform","ml","Check","NewTask","projectId","setNewTaskFormOpen","Project","setProject","setTasks","newTaskFormOpen","match","useRouteMatch","params","id","projectRes","tasksRes","isEmpty","pl","pr","Edit","mr","renderTasksLitst","App","verifyToken","exact","path","breakpoints","createBreakpoints","theme","extendTheme","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.67be0df6.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  FormControl,\n  FormLabel,\n  Input,\n  FormHelperText,\n  FormErrorMessage,\n  Textarea,\n} from \"@chakra-ui/react\";\n\nconst ControlledInput = (props) => {\n  const [touched, setTouched] = useState(false);\n\n  useEffect(() => {\n    if (props.submitClicked) {\n      setTouched(true);\n    }\n  }, [props.submitClicked]);\n\n  return (\n    <FormControl mb=\"20px\" isInvalid={props.error && touched ? true : false}>\n      <FormLabel>{props.label}</FormLabel>\n      {!props.textarea && (\n        <Input\n          onBlur={(e) => {\n            setTouched(true);\n          }}\n          type={props.type}\n          onChange={(e) => {\n            props.setValue(e.target.value);\n          }}\n          value={props.value}\n        />\n      )}\n      {props.textarea && (\n        <Textarea\n          onBlur={(e) => {\n            setTouched(true);\n          }}\n          onChange={(e) => {\n            props.setValue(e.target.value);\n          }}\n          value={props.value}\n        />\n      )}\n      {props.error && touched ? (\n        <FormErrorMessage>{props.error}</FormErrorMessage>\n      ) : (\n        <FormHelperText>{props.formHelperText}</FormHelperText>\n      )}\n    </FormControl>\n  );\n};\n\nexport default ControlledInput;\n","// email validation\nexport const validateEmail = (email) => {\n  if (!email) {\n    return \"Email is required!\";\n  } else if (\n    !/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(\n      email\n    )\n  ) {\n    return \"Email is invalid!\";\n  } else {\n    return \"\";\n  }\n};\n\n// name validation\nexport const validateName = (name) => {\n  if (!name) {\n    return \"Name is required!\";\n  } else {\n    return \"\";\n  }\n};\n\n// password validation\nexport const validatePassword = (password) => {\n  if (!password) {\n    return \"Password is required!\";\n  } else if (password.length < 8) {\n    return \"Password must be at least 8 charecters long!\";\n  } else {\n    return \"\";\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Flex, Box, Button, Heading, Text } from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\nimport ControlledInput from \"./helpers/ControlledInput\";\nimport axios from \"axios\";\nimport \"./main.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { validateEmail } from \"../utils/validators\";\n\nconst Login = (props) => {\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState({\n    email: \"Email is invalid!\",\n    password: \"Password is required!\",\n  });\n  const [submitClicked, setSubmitClicked] = useState(false);\n\n  const validateForm = () => {\n    const errEmail = validateEmail(email);\n    var errPassword = password.length == 0 ? \"Password is required!\" : \"\";\n\n    console.log(\"from validate: \", errPassword);\n    const newErrors = { email: errEmail, password: errPassword };\n    setErrors(newErrors);\n  };\n\n  useEffect(() => {\n    validateForm();\n  }, [email, password]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // make sure that all Input fields are considered \"touched\"\n    // in case somebody clicked submit without touching any fields\n    setSubmitClicked(true);\n    // if there are any errors return early and dont submit data\n    if (errors.email.length + errors.password.length !== 0) {\n      return;\n    }\n\n    // submit data to backend\n\n    try {\n      const res = await axios.post(\"/auth/login\", {\n        email,\n        password,\n      });\n\n      if (res.data.token) {\n        localStorage.setItem(\"token\", res.data.token);\n        props.setIsSignedIn(true);\n        history.push(\"/\");\n      }\n    } catch (error) {\n      if (error.request.status === 401) {\n        setErrors({\n          password: error.request.response,\n          email: error.request.response,\n        });\n      }\n    }\n  };\n\n  // render component\n  return (\n    <Flex\n      className=\"main_box\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      w=\"100vw\"\n      h=\"100vh\"\n    >\n      <Box bg=\"whitesmoke\" padding=\"20px\" borderRadius=\"10px\" w=\"50%\">\n        <Heading mb=\"30px\" textAlign=\"center\">\n          Login\n        </Heading>\n        <form onSubmit={handleSubmit}>\n          <ControlledInput\n            submitClicked={submitClicked}\n            label=\"Email Address\"\n            type=\"email\"\n            value={email}\n            setValue={setEmail}\n            error={errors.email}\n          />\n          <ControlledInput\n            submitClicked={submitClicked}\n            label=\"Password\"\n            type=\"password\"\n            value={password}\n            setValue={setPassword}\n            error={errors.password}\n          />\n          <Button bg=\"green.500\" type=\"submit\">\n            Submit\n          </Button>\n        </form>\n        <Box textAlign=\"end\" mt=\"3\">\n          <Text fontSize=\"lg\" color=\"gray.500\">\n            Don't have an account?{\" \"}\n            <Link to=\"/register\">\n              <Text as=\"span\" color=\"blue.500\" _hover={{ color: \"blue.100\" }}>\n                Sign up!\n              </Text>\n            </Link>\n          </Text>\n        </Box>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Login;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Flex,\n  Box,\n  Button,\n  Heading,\n  Switch,\n  FormControl,\n  FormLabel,\n  Text,\n} from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\nimport ControlledInput from \"./helpers/ControlledInput\";\nimport axios from \"axios\";\nimport \"./main.css\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  validateName,\n  validateEmail,\n  validatePassword,\n} from \"../utils/validators\";\n\nconst Register = (props) => {\n  const history = useHistory();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [sampleData, setSampleData] = useState(true);\n  const [errors, setErrors] = useState({\n    name: \"Name is required!\",\n    email: \"Email is invalid!\",\n    password: \"Password is required!\",\n  });\n  const [submitClicked, setSubmitClicked] = useState(false);\n\n  const validateForm = () => {\n    const errEmail = validateEmail(email);\n    const errName = validateName(name);\n    const errPassword = validatePassword(password);\n\n    const newErrors = { name: errName, email: errEmail, password: errPassword };\n    setErrors(newErrors);\n  };\n\n  useEffect(() => {\n    validateForm();\n  }, [name, email, password]);\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // make sure that all Input fields are considered \"touched\"\n    // in case somebody clicked submit without touching any fields\n    setSubmitClicked(true);\n\n    console.log(\"From the function: \", errors.name);\n    // if there are any errors return early and dont submit data\n    if (\n      errors.name.length + errors.email.length + errors.password.length !==\n      0\n    ) {\n      console.log(\"IF RUNNING\");\n      return;\n    }\n\n    // submit data to backend\n\n    try {\n      const res = await axios.post(\"/auth/register\", {\n        name,\n        email,\n        password,\n      });\n\n      if (res.data.token) {\n        localStorage.setItem(\"token\", res.data.token);\n        if (sampleData) {\n          const sampleDataRes = await axios.post(\n            \"/dashboard\",\n            {},\n            {\n              headers: {\n                token: localStorage.getItem(\"token\"),\n              },\n            }\n          );\n        }\n        props.setIsSignedIn(true);\n        history.push(\"/\");\n      }\n    } catch (error) {\n      if (error.request.status === 401) {\n        setErrors({ ...errors, email: error.request.response });\n        return;\n      }\n      alert(error.message);\n    }\n  };\n\n  // render component\n  return (\n    <Flex\n      className=\"main_box\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      w=\"100vw\"\n      h=\"100vh\"\n    >\n      <Box bg=\"whitesmoke\" padding=\"20px\" borderRadius=\"10px\" w=\"50%\">\n        <Heading mb=\"30px\" textAlign=\"center\">\n          Register\n        </Heading>\n        <form onSubmit={handleSubmit}>\n          <ControlledInput\n            submitClicked={submitClicked}\n            label=\"Email Address\"\n            type=\"email\"\n            value={email}\n            setValue={setEmail}\n            error={errors.email}\n            formHelperText=\"We'll never share your email\"\n          />\n          <ControlledInput\n            submitClicked={submitClicked}\n            label=\"Name\"\n            type=\"text\"\n            value={name}\n            setValue={setName}\n            error={errors.name}\n            formHelperText=\"What shall we call you\"\n          />\n          <ControlledInput\n            submitClicked={submitClicked}\n            label=\"Password\"\n            type=\"password\"\n            value={password}\n            setValue={setPassword}\n            error={errors.password}\n            formHelperText=\"Use something secure\"\n          />\n          <FormControl mb=\"20px\" display=\"flex\" alignItems=\"center\">\n            <FormLabel mb=\"0\">Start with Sample data? (Recomended)</FormLabel>\n            <Switch\n              isChecked={sampleData}\n              onChange={() => {\n                setSampleData(!sampleData);\n              }}\n            />\n          </FormControl>\n          <Button bg=\"green.500\" type=\"submit\">\n            Submit\n          </Button>\n        </form>\n        <Box textAlign=\"end\" mt=\"3\">\n          <Text fontSize=\"lg\" color=\"gray.500\">\n            Already have an account?{\" \"}\n            <Link to=\"/login\">\n              <Text as=\"span\" color=\"blue.500\" _hover={{ color: \"blue.100\" }}>\n                Login\n              </Text>\n            </Link>\n          </Text>\n        </Box>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Register;\n","import { Flex, Box, Button, Text } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = (props) => {\n  if (\n    window.location.pathname == \"/register\" ||\n    window.location.pathname == \"/login\"\n  ) {\n    return <></>;\n  }\n\n  const handleLogOut = () => {\n    localStorage.removeItem(\"token\");\n    props.setIsSignedIn(false);\n  };\n\n  const renderButtons = () => {\n    if (props.isSignedIn) {\n      return (\n        <Button colorScheme=\"facebook\" onClick={handleLogOut}>\n          Log out\n        </Button>\n      );\n    } else if (!props.isSignedIn) {\n      return (\n        <>\n          <Link to=\"/login\">\n            <Button>Login</Button>\n          </Link>\n          <Link to=\"/register\">\n            <Button>Sign up</Button>\n          </Link>\n        </>\n      );\n    }\n  };\n\n  return (\n    <Flex\n      p=\"5\"\n      flexDirection=\"row\"\n      justifyContent=\"space-between\"\n      bg=\"gray.800\"\n      color=\"white\"\n    >\n      <Text fontSize=\"2xl\">ProjectManager</Text>\n      <Flex justifyContent=\"space-around\" w=\"40vw\">\n        <Link to=\"/\">\n          <Text fontSize=\"4xl\" colorScheme=\"facebook\"></Text>Dashboard\n        </Link>\n        <Link to=\"/projects\">\n          <Text fontSize=\"4xl\" colorScheme=\"facebook\"></Text>My projects\n        </Link>\n      </Flex>\n      <Box>{renderButtons()}</Box>\n    </Flex>\n  );\n};\n\nexport default Header;\n","import React, { useCallback, useState } from \"react\";\nimport { PieChart, Pie, Sector } from \"recharts\";\n\nconst renderActiveShape = (props) => {\n  const RADIAN = Math.PI / 180;\n  const {\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    startAngle,\n    endAngle,\n    fill,\n    payload,\n    percent,\n    value,\n  } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? \"start\" : \"end\";\n\n  return (\n    <g>\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\n        {payload.name}\n      </text>\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={payload.fill}\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill={fill}\n      />\n      <path\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\n        stroke={fill}\n        fill=\"none\"\n      />\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        textAnchor={textAnchor}\n        fill=\"#333\"\n      >{`Tasks: ${value}`}</text>\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        dy={18}\n        textAnchor={textAnchor}\n        fill=\"#999\"\n      >\n        {`(${(percent * 100).toFixed(2)}%)`}\n      </text>\n    </g>\n  );\n};\n\nexport default function TasksByCategory(props) {\n  console.log(props);\n  const [activeIndex, setActiveIndex] = useState(0);\n\n  // add fill colors to data\n  if (props.data.length !== 0) {\n    props.data[0].fill = \"#FF0000\";\n    props.data[0].value = parseInt(props.data[0].value);\n    props.data[1].fill = \"#008080\";\n    props.data[1].value = parseInt(props.data[1].value);\n    props.data[2].fill = \"#101820FF\";\n    props.data[2].value = parseInt(props.data[2].value);\n  }\n\n  const onPieEnter = useCallback(\n    (_, index) => {\n      setActiveIndex(index);\n    },\n    [setActiveIndex]\n  );\n\n  return (\n    <PieChart width={400} height={400}>\n      <Pie\n        activeIndex={activeIndex}\n        activeShape={renderActiveShape}\n        data={props.data}\n        cx={200}\n        cy={200}\n        innerRadius={60}\n        outerRadius={80}\n        fill=\"#8884d8\"\n        dataKey=\"value\"\n        onMouseEnter={onPieEnter}\n      />\n    </PieChart>\n  );\n}\n","import React from \"react\";\nimport { BarChart, CartesianGrid, XAxis, YAxis, Tooltip, Bar } from \"recharts\";\n\nconst TasksByPriority = (props) => {\n  return (\n    <BarChart width={400} height={300} data={props.data}>\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"name\" />\n      <YAxis />\n      <Tooltip />\n      <Bar name=\"Number of Tasks\" dataKey=\"value\" fill=\"#0088FE\" />\n    </BarChart>\n  );\n};\n\nexport default TasksByPriority;\n","const toReadableDate = (timestamp) => {\n  var array = timestamp.split(\"T\");\n  return array[0];\n};\n\nexport default toReadableDate;\n","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();\n","import React from \"react\";\nimport {\n  Table,\n  TableCaption,\n  Thead,\n  Tr,\n  Th,\n  Tbody,\n  Td,\n  Tag,\n} from \"@chakra-ui/react\";\nimport toReadableDate from \"../../utils/toReadableDate\";\nimport history from \"../../history\";\n\nconst UrgentTasks = (props) => {\n  console.log(props);\n\n  const renderTasks = (tasks) =>\n    tasks.map((task) => {\n      var tagBgColor;\n      var tagColor = \"white\";\n      console.log(task.task_priority);\n\n      if (task.task_priority === \"low\") {\n        tagBgColor = \"green\";\n      } else if (task.task_priority === \"medium\") {\n        tagBgColor = \"yellow\";\n        tagColor = \"black\";\n      } else if (task.task_priority === \"high\") {\n        tagBgColor = \"red\";\n      }\n      console.log(tagColor);\n      return (\n        <Tr\n          onClick={() => {\n            history.push(`projects/${task.task_project}`);\n          }}\n          _hover={{ cursor: \"pointer\", color: \"teal\" }}\n        >\n          <Td>{task.task_title}</Td>\n          <Td>{task.task_description}</Td>\n          <Td>\n            <Tag size=\"lg\" color={tagColor} bgColor={tagBgColor}>\n              {task.task_priority}\n            </Tag>\n          </Td>\n          <Td>{toReadableDate(task.task_due_date)}</Td>\n        </Tr>\n      );\n    });\n  return (\n    <Table\n      w={{ sm: \"100%\", md: \"100%\", lg: \"80%\", xl: \"60%\" }}\n      variant=\"striped\"\n      colorScheme=\"gray\"\n    >\n      <TableCaption>Urgent Tasks: due in less than a week</TableCaption>\n      <Thead>\n        <Tr>\n          <Th>Task</Th>\n          <Th>Description</Th>\n          <Th>Priority</Th>\n          <Th>Due Date</Th>\n        </Tr>\n      </Thead>\n      <Tbody>{renderTasks(props.data)}</Tbody>\n    </Table>\n  );\n};\n\nexport default UrgentTasks;\n","import React, { useEffect, useState } from \"react\";\nimport { Box, Flex, Heading } from \"@chakra-ui/react\";\nimport Header from \"../Header\";\nimport TasksByCategory from \"./TasksByCategory\";\nimport TasksByPriority from \"./TasksByPriority\";\nimport axios from \"axios\";\nimport UrgentTasks from \"./UrgentTasks\";\n\nconst Dashboard = (props) => {\n  const [tasksByCategory, setTasksByCategory] = useState([]);\n  const [tasksByPriority, setTasksByPriority] = useState([]);\n  const [urgentTasks, setUrgentTasks] = useState([]);\n\n  const fetchData = async () => {\n    try {\n      const res = await axios.get(\"/dashboard\", {\n        headers: {\n          token: localStorage.getItem(\"token\"),\n        },\n      });\n      setTasksByCategory(res.data.tasksByCategory);\n      setTasksByPriority(res.data.tasksByPriority);\n      setUrgentTasks(res.data.urgentTasks);\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  // fetch data on mount\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <Box>\n      <Header\n        isSignedIn={props.isSignedIn}\n        setIsSignedIn={props.setIsSignedIn}\n      />\n      <Box bg=\"blue.100\" p=\"6\">\n        <Heading mb=\"30px\" textAlign=\"center\">\n          Dashboard\n        </Heading>\n        <Flex mb=\"30px\" justifyContent=\"center\">\n          <Box m=\"5\">\n            <Heading pt=\"6\" mb=\"5\" textAlign=\"center\">\n              Tasks by Priority\n            </Heading>\n            <TasksByPriority data={tasksByPriority} />\n          </Box>\n          <Box m=\"5\">\n            <Heading pt=\"6\" mb=\"5\" textAlign=\"center\">\n              Tasks by Category\n            </Heading>\n            <TasksByCategory data={tasksByCategory} />\n          </Box>\n        </Flex>\n        <Heading textAlign=\"center\">Urgent Tasks</Heading>\n        <Flex justifyContent=\"center\">\n          <UrgentTasks data={urgentTasks} />\n        </Flex>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Dashboard;\n","import React, { useState } from \"react\";\nimport {\n  Box,\n  Badge,\n  Button,\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n} from \"@chakra-ui/react\";\nimport { ChevronDownIcon } from \"@chakra-ui/icons\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst ProjectListItem = ({ project, setRefetchData }) => {\n  const [loading, setLoading] = useState(false);\n  const handleDelete = async () => {\n    try {\n      setLoading(true);\n      await axios.delete(`/projects/${project.project_id}`, {\n        headers: {\n          token: localStorage.getItem(\"token\"),\n        },\n      });\n      setRefetchData(true);\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  if (loading) {\n    return (\n      <Box\n        m=\"5\"\n        w={{ sm: \"100%\", md: \"30%\" }}\n        bg=\"gray.600\"\n        color=\"white\"\n        borderWidth=\"1px\"\n        borderRadius=\"lg\"\n        overflow=\"hidden\"\n      >\n        Loading...\n      </Box>\n    );\n  }\n  return (\n    <Box\n      m=\"5\"\n      w={{ sm: \"100%\", md: \"30%\" }}\n      bg=\"gray.600\"\n      color=\"white\"\n      borderWidth=\"1px\"\n      borderRadius=\"lg\"\n      overflow=\"hidden\"\n      borderColor=\"gray.600\"\n    >\n      <Box p=\"6\">\n        <Box mt=\"1\" fontWeight=\"semibold\" fontSize=\"2xl\" as=\"h4\">\n          {project.project_title}\n        </Box>\n\n        <Box mt=\"2\" d=\"flex\" alignItems=\"baseline\">\n          <Badge borderRadius=\"full\" px=\"2\" colorScheme=\"teal\">\n            {project.project_status}\n          </Badge>\n        </Box>\n\n        <Box mt=\"2\">{project.project_description}</Box>\n\n        <Box d=\"flex\" flexWrap=\"wrap\" alignItems=\"baseline\" mt=\"2\">\n          <Menu>\n            <MenuButton\n              colorScheme=\"facebook\"\n              as={Button}\n              rightIcon={<ChevronDownIcon />}\n            >\n              Actions\n            </MenuButton>\n            <MenuList color=\"black\" borderColor=\"teal\" bg=\"teal.200\">\n              <Link to={`/projects/${project.project_id}`}>\n                <MenuItem>Manage</MenuItem>\n              </Link>\n              <MenuItem onClick={handleDelete}>Delete</MenuItem>\n            </MenuList>\n          </Menu>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ProjectListItem;\n","import React, { useState, useEffect } from \"react\";\nimport { Box, Text, Button } from \"@chakra-ui/react\";\nimport { AddIcon } from \"@chakra-ui/icons\";\nimport ControlledInput from \"../helpers/ControlledInput\";\nimport axios from \"axios\";\n\nconst NewProject = (props) => {\n  const [formOpen, setFormOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [submitClicked, setSubmitClicked] = useState(false);\n  const [errors, setErrors] = useState({\n    title: \"This field is required\",\n    description: \"This field is required\",\n  });\n\n  const handleCancel = () => {\n    setTitle(\"\");\n    setDescription(\"\");\n    setFormOpen(false);\n  };\n\n  const handleSubmit = async () => {\n    try {\n      setSubmitClicked(true);\n      if (errors.title || errors.description) {\n        return;\n      }\n      const res = await axios.post(\n        \"/projects\",\n        {\n          title: title,\n          description: description,\n        },\n        {\n          headers: {\n            token: localStorage.getItem(\"token\"),\n          },\n        }\n      );\n      setTitle(\"\");\n      setDescription(\"\");\n      setSubmitClicked(false);\n      setFormOpen(false);\n      props.setRefetchData(true);\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  const validateForm = () => {\n    const errTitle = title.length === 0 ? \"Title is required!\" : \"\";\n    const errDescription =\n      description.length === 0 ? \"Description is required!\" : \"\";\n    const newErrors = { title: errTitle, description: errDescription };\n    setErrors(newErrors);\n  };\n\n  useEffect(() => {\n    validateForm();\n  }, [title, description]);\n\n  if (formOpen) {\n    return (\n      <Box\n        m=\"5\"\n        w={{ sm: \"100%\", md: \"30%\" }}\n        minH=\"200px\"\n        bg=\"gray.600\"\n        color=\"white\"\n        borderWidth=\"10px\"\n        borderRadius=\"lg\"\n        overflow=\"hidden\"\n        borderStyle=\"solid\"\n        borderColor=\"gray.600\"\n      >\n        <Text fontWeight=\"bold\" fontSize=\"2xl\" textAlign=\"center\">\n          New Project\n        </Text>\n        <ControlledInput\n          value={title}\n          setValue={setTitle}\n          type=\"text\"\n          submitClicked={submitClicked}\n          label=\"Title\"\n          error={errors.title}\n        />\n        <ControlledInput\n          value={description}\n          setValue={setDescription}\n          textarea={true}\n          submitClicked={submitClicked}\n          label=\"Description\"\n          te\n          error={errors.description}\n        />\n        <Box d=\"flex\" justifyContent=\"space-between\" mt=\"5\">\n          <Button color=\"black\" colorScheme=\"gray\" onClick={handleCancel}>\n            Cancel\n          </Button>\n          <Button\n            colorScheme=\"green\"\n            isLoading={loading}\n            onClick={handleSubmit}\n          >\n            Save\n          </Button>\n        </Box>\n      </Box>\n    );\n  }\n\n  if (!formOpen) {\n    return (\n      <Box\n        d=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        m=\"5\"\n        w={{ sm: \"100%\", md: \"30%\" }}\n        minH=\"200px\"\n        bg=\"blue.100\"\n        color=\"white\"\n        borderWidth=\"10px\"\n        borderRadius=\"lg\"\n        overflow=\"hidden\"\n        borderStyle=\"dashed\"\n        borderColor=\"gray.500\"\n        _hover={{ borderColor: \"teal\", cursor: \"pointer\" }}\n        onClick={() => {\n          if (!formOpen) {\n            setFormOpen(true);\n          }\n        }}\n      >\n        <AddIcon color=\"gray.500\" h={12} w={12} />\n      </Box>\n    );\n  }\n};\n\nexport default NewProject;\n","import { Box, Flex } from \"@chakra-ui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"../Header\";\nimport axios from \"axios\";\nimport ProjectListItem from \"./ProjectListItem\";\nimport NewProject from \"./NewProject\";\n\nconst Projects = (props) => {\n  const [projects, setProjects] = useState([]);\n  const [refetchData, setRefetchData] = useState(false);\n\n  const fetchData = async () => {\n    try {\n      const res = await axios.get(\"/projects\", {\n        headers: {\n          token: localStorage.getItem(\"token\"),\n        },\n      });\n      setProjects(res.data);\n      setRefetchData(false);\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    fetchData();\n  }, [refetchData]);\n\n  const renderProjectsList = projects.map((project) => {\n    console.log(project);\n    return (\n      <ProjectListItem setRefetchData={setRefetchData} project={project} />\n    );\n  });\n  return (\n    <Box bg=\"blue.100\" minH=\"max-content\" h=\"100vh\">\n      <Header\n        isSignedIn={props.isSignedIn}\n        setIsSignedIn={props.setIsSignedIn}\n      />\n      <Flex alignItems=\"flex-start\" flexWrap=\"wrap\" p=\"6\">\n        {renderProjectsList}\n        <NewProject setRefetchData={setRefetchData} />\n      </Flex>\n    </Box>\n  );\n};\n\nexport default Projects;\n","const isDateInPast = (dateString) => {\n  var currentDate = new Date();\n  var date = new Date(dateString);\n\n  if (currentDate.getTime() - date.getTime() > 0) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default isDateInPast;\n","const isDateWithinOneWeek = (dateString) => {\n  var currentDate = new Date();\n  var date = new Date(dateString);\n  if (date.getTime() - currentDate.getTime() < 0) {\n    return false;\n  } else if (date.getTime() < currentDate.getTime() + 604800000) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default isDateWithinOneWeek;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Input,\n  Badge,\n  Textarea,\n  Button,\n  FormControl,\n  FormLabel,\n  Switch,\n  Popover,\n  PopoverArrow,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverCloseButton,\n  PopoverHeader,\n  PopoverBody,\n  PopoverFooter,\n} from \"@chakra-ui/react\";\nimport { CheckIcon } from \"@chakra-ui/icons\";\nimport toReadableDate from \"../../utils/toReadableDate\";\nimport isDateInPast from \"../../utils/isDateInPast\";\nimport isDateWithinOneWeek from \"../../utils/isDateWithinOneWeek\";\nimport axios from \"axios\";\n\nconst Task = ({ task, setRefetchData }) => {\n  const [editMode, setEditMode] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [title, setTitle] = useState(task.task_title);\n  const [description, setDescription] = useState(task.task_description);\n  const [priority, setPriority] = useState(task.task_priority);\n  const [category, setCategory] = useState(task.task_category);\n  const [status, setStatus] = useState(task.task_status);\n  const [dueDate, setDueDate] = useState(toReadableDate(task.task_due_date));\n  const [newTitle, setNewTitle] = useState(task.task_title);\n  const [newDescription, setNewDescription] = useState(task.task_description);\n  const [newPriority, setNewPriority] = useState(task.task_priority);\n  const [newCategory, setNewCategory] = useState(task.task_category);\n  const [newStatus, setNewStatus] = useState(task.task_status);\n  const [newDueDate, setNewDueDate] = useState(\n    toReadableDate(task.task_due_date)\n  );\n  const [styles, setStyles] = useState({\n    bgColor: \"teal\",\n    borderColor: \"gray.200\",\n    overdue: false,\n    urgent: false,\n  });\n\n  const setAllStyles = () => {\n    var newStyles = styles;\n    if (priority === \"low\") {\n      newStyles.bgColor = \"green\";\n    } else if (priority === \"medium\") {\n      newStyles.bgColor = \"yellow\";\n    } else if (priority === \"high\") {\n      newStyles.bgColor = \"red\";\n    }\n\n    if (isDateInPast(dueDate) && status === \"pending\") {\n      newStyles.borderColor = \"red\";\n      newStyles.overdue = true;\n    } else if (isDateWithinOneWeek(dueDate) && status === \"pending\") {\n      newStyles.borderColor = \"orange\";\n      newStyles.urgent = true;\n    } else {\n      newStyles.borderColor = \"gray.200\";\n      newStyles.urgent = false;\n      newStyles.overdue = false;\n    }\n    setStyles(newStyles);\n  };\n\n  useEffect(() => {\n    setAllStyles();\n  }, [dueDate, priority, status, styles]);\n\n  const handleSave = async () => {\n    try {\n      // set loading state\n      setLoading(true);\n      // submit new data\n      const res = await axios.put(\n        `/tasks/${task.task_id}`,\n        {\n          title: newTitle ? newTitle : title,\n          description: newDescription ? newDescription : description,\n          priority: newPriority,\n          due_date: newDueDate,\n          status: newStatus,\n          category: newCategory,\n        },\n        {\n          headers: {\n            token: localStorage.getItem(\"token\"),\n          },\n        }\n      );\n      setTitle(res.data.task_title);\n      setDescription(res.data.task_description);\n      setNewTitle(res.data.task_title);\n      setNewDescription(res.data.task_description);\n      setPriority(res.data.task_priority);\n      setDueDate(toReadableDate(res.data.task_due_date));\n      setStatus(res.data.task_status);\n      setCategory(res.data.task_category);\n      setLoading(false);\n      setEditMode(false);\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  const handleCancel = () => {\n    // set \"new\" States / selected States back to original value\n    // close edit mode\n    setNewTitle(title);\n    setNewDescription(description);\n    setNewPriority(priority);\n    setEditMode(false);\n  };\n\n  const handleDelete = async () => {\n    const res = await axios.delete(`/tasks/${task.task_id}`, {\n      headers: {\n        token: localStorage.getItem(\"token\"),\n      },\n    });\n    setRefetchData(true);\n  };\n\n  if (editMode) {\n    return (\n      <Box\n        m=\"10px\"\n        maxW=\"sm\"\n        height=\"max-content\"\n        borderWidth=\"1px\"\n        borderRadius=\"lg\"\n        overflow=\"hidden\"\n        bg=\"gray.600\"\n        color=\"white\"\n      >\n        <Box p=\"6\">\n          <Box mt=\"1\" fontWeight=\"semibold\" as=\"h4\" lineHeight=\"tight\">\n            Title:{\" \"}\n            <Input\n              value={newTitle}\n              onChange={(e) => setNewTitle(e.target.value)}\n            />\n          </Box>\n          <Box mt=\"1\" fontWeight=\"semibold\" as=\"h4\" lineHeight=\"tight\">\n            Description:{\" \"}\n            <Textarea\n              value={newDescription}\n              onChange={(e) => setNewDescription(e.target.value)}\n            />\n          </Box>\n          <Box mt=\"1\" fontWeight=\"semibold\" as=\"h4\" lineHeight=\"tight\">\n            Due Date:{\" \"}\n            <Input\n              type=\"date\"\n              value={newDueDate}\n              onChange={(e) => setNewDueDate(e.target.value)}\n            />\n          </Box>\n          <Box mt=\"1\" fontWeight=\"semibold\" as=\"h4\" lineHeight=\"tight\">\n            {\" \"}\n            Select Priority:\n          </Box>\n          <Box\n            d=\"flex\"\n            mt=\"2\"\n            justifyContent=\"space-between\"\n            alignItems=\"baseline\"\n          >\n            <Badge\n              size=\"lg\"\n              borderRadius=\"full\"\n              px=\"2\"\n              onClick={() => setNewPriority(\"low\")}\n              cursor=\"pointer\"\n              colorScheme={newPriority === \"low\" ? \"blue\" : \"gray\"}\n            >\n              low\n            </Badge>\n            <Badge\n              size=\"lg\"\n              borderRadius=\"full\"\n              px=\"2\"\n              onClick={() => setNewPriority(\"medium\")}\n              cursor=\"pointer\"\n              colorScheme={newPriority === \"medium\" ? \"blue\" : \"gray\"}\n            >\n              medium\n            </Badge>\n            <Badge\n              size=\"lg\"\n              borderRadius=\"full\"\n              px=\"2\"\n              onClick={() => setNewPriority(\"high\")}\n              cursor=\"pointer\"\n              colorScheme={newPriority === \"high\" ? \"blue\" : \"gray\"}\n            >\n              high\n            </Badge>\n          </Box>\n          <Box mt=\"1\" fontWeight=\"semibold\" as=\"h4\" lineHeight=\"tight\">\n            {\" \"}\n            Select Category:\n          </Box>\n          <Box\n            d=\"flex\"\n            mt=\"2\"\n            justifyContent=\"space-between\"\n            alignItems=\"baseline\"\n          >\n            <Badge\n              borderRadius=\"full\"\n              px=\"2\"\n              onClick={() => setNewCategory(\"bug\")}\n              cursor=\"pointer\"\n              colorScheme={newCategory === \"bug\" ? \"blue\" : \"gray\"}\n            >\n              Bug\n            </Badge>\n            <Badge\n              borderRadius=\"full\"\n              px=\"2\"\n              onClick={() => setNewCategory(\"documentation\")}\n              cursor=\"pointer\"\n              colorScheme={newCategory === \"documentation\" ? \"blue\" : \"gray\"}\n            >\n              Documentation\n            </Badge>\n            <Badge\n              borderRadius=\"full\"\n              px=\"2\"\n              onClick={() => setNewCategory(\"enhancement\")}\n              cursor=\"pointer\"\n              colorScheme={newCategory === \"enhancement\" ? \"blue\" : \"gray\"}\n            >\n              Enhancement\n            </Badge>\n          </Box>\n          <Box mt=\"3\" fontWeight=\"semibold\">\n            <FormControl display=\"flex\" alignItems=\"center\">\n              <FormLabel mb=\"0\">Completed?</FormLabel>\n              <Switch\n                isChecked={newStatus === \"pending\" ? false : true}\n                onChange={() =>\n                  setNewStatus(\n                    newStatus === \"pending\" ? \"completed\" : \"pending\"\n                  )\n                }\n              />\n            </FormControl>\n            <Popover>\n              <PopoverTrigger>\n                <Button mt=\"5\" lineHeight=\"tight\" colorScheme=\"red\">\n                  Delete Task\n                </Button>\n              </PopoverTrigger>\n              <PopoverContent color=\"black\">\n                <PopoverArrow />\n                <PopoverCloseButton />\n                <PopoverHeader>Confirmation!</PopoverHeader>\n                <PopoverBody>\n                  Are you sure you want to delete this task?\n                </PopoverBody>\n                <PopoverFooter>\n                  <Button onClick={handleDelete} colorScheme=\"red\">\n                    Confirm\n                  </Button>\n                </PopoverFooter>\n              </PopoverContent>\n            </Popover>\n          </Box>\n          <Box d=\"flex\" justifyContent=\"space-between\" mt=\"5\">\n            <Button\n              color=\"black\"\n              colorScheme=\"gray\"\n              onClick={() => {\n                handleCancel();\n              }}\n            >\n              Cancel\n            </Button>\n            <Button\n              colorScheme=\"green\"\n              isLoading={loading}\n              onClick={handleSave}\n            >\n              Save\n            </Button>\n          </Box>\n        </Box>\n      </Box>\n    );\n  }\n\n  return (\n    <Box\n      m=\"10px\"\n      maxW=\"sm\"\n      borderWidth=\"1px\"\n      borderRadius=\"lg\"\n      overflow=\"hidden\"\n      cursor=\"pointer\"\n      _hover={{ bg: \"gray.600\", color: \"white\" }}\n      borderColor={styles.borderColor}\n      onClick={() => {\n        setEditMode(true);\n      }}\n    >\n      <Box p=\"6\">\n        <Box\n          mt=\"1\"\n          fontWeight=\"semibold\"\n          as=\"h4\"\n          lineHeight=\"tight\"\n          isTruncated\n          fontSize=\"xl\"\n        >\n          {title}\n        </Box>\n        <Box d=\"flex\" alignItems=\"baseline\">\n          <Badge borderRadius=\"full\" px=\"2\" colorScheme={styles.bgColor}>\n            {priority}\n          </Badge>\n          <Box\n            color=\"gray.500\"\n            fontWeight=\"semibold\"\n            letterSpacing=\"wide\"\n            fontSize=\"sm\"\n            textTransform=\"uppercase\"\n            ml=\"2\"\n          >\n            {category} &bull; {dueDate}\n          </Box>\n        </Box>\n\n        <Box>{description}</Box>\n\n        <Box\n          d=\"flex\"\n          mt=\"2\"\n          alignItems=\"center\"\n          color=\"gray.500\"\n          fontSize=\"xs\"\n          fontWeight=\"bold\"\n        >\n          {status}\n          {status === \"completed\" && (\n            <Box ml=\"2\">\n              <CheckIcon color=\"green\" h={5} w={5} />\n            </Box>\n          )}\n          {styles.overdue && (\n            <>\n              {\" \"}\n              |\n              <Badge ml=\"2\" borderRadius=\"full\" px=\"2\" colorScheme=\"red\">\n                OVERDUE\n              </Badge>\n            </>\n          )}\n          {styles.urgent && (\n            <>\n              {\" \"}\n              |\n              <Badge ml=\"2\" borderRadius=\"full\" px=\"2\" colorScheme=\"yellow\">\n                URGENT\n              </Badge>\n            </>\n          )}\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Task;\n","import React, { useState, useEffect } from \"react\";\nimport { Box, Badge, Input, Button } from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport ControlledInput from \"../helpers/ControlledInput\";\n\nconst NewTask = (props) => {\n  const [loading, setLoading] = useState(false);\n  const [submitClicked, setSubmitClicked] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [priority, setPriority] = useState(\"low\");\n  const [dueDate, setDueDate] = useState(\"2025-01-01\");\n  const [category, setCategory] = useState(\"bug\");\n  const [errors, setErrors] = useState({\n    title: \"Title is required\",\n    description: \"Description is required\",\n  });\n\n  const handleCancel = () => {\n    props.setNewTaskFormOpen(false);\n  };\n\n  const handleSave = async () => {\n    try {\n      setSubmitClicked(true);\n      setLoading(true);\n      if (errors.title || errors.description) {\n        setLoading(false);\n        return;\n      }\n\n      // create task\n      await axios.post(\n        \"/tasks\",\n        {\n          title: title,\n          description: description,\n          priority: priority,\n          due_date: dueDate,\n          category: category,\n          projectId: props.projectId,\n        },\n        {\n          headers: {\n            token: localStorage.getItem(\"token\"),\n          },\n        }\n      );\n\n      setLoading(false);\n      props.setRefetchData(true);\n      props.setNewTaskFormOpen(false);\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  const validateForm = () => {\n    const errTitle = title.length === 0 ? \"Title is required!\" : \"\";\n    const errDescription =\n      description.length === 0 ? \"Description is required!\" : \"\";\n    const newErrors = { title: errTitle, description: errDescription };\n    setErrors(newErrors);\n  };\n\n  useEffect(() => {\n    validateForm();\n  }, [title, description]);\n  return (\n    <Box m=\"10px\" overflow=\"hidden\" bg=\"gray.600\" color=\"white\">\n      <Box p=\"6\">\n        <Box mt=\"1\" fontWeight=\"semibold\" as=\"h4\" lineHeight=\"tight\">\n          Title:{\" \"}\n          <ControlledInput\n            value={title}\n            setValue={setTitle}\n            type=\"text\"\n            submitClicked={submitClicked}\n            error={errors.title}\n          />\n        </Box>\n        <Box mt=\"1\" fontWeight=\"semibold\" as=\"h4\" lineHeight=\"tight\">\n          Description:{\" \"}\n          <ControlledInput\n            value={description}\n            setValue={setDescription}\n            textarea={true}\n            submitClicked={submitClicked}\n            error={errors.description}\n          />\n        </Box>\n        <Box mt=\"1\" fontWeight=\"semibold\" as=\"h4\" lineHeight=\"tight\">\n          Due Date:{\" \"}\n          <Input\n            type=\"date\"\n            value={dueDate}\n            onChange={(e) => setDueDate(e.target.value)}\n          />\n        </Box>\n        <Box mt=\"1\" fontWeight=\"semibold\" as=\"h4\" lineHeight=\"tight\">\n          {\" \"}\n          Select Priority:\n        </Box>\n        <Box\n          d=\"flex\"\n          mt=\"2\"\n          justifyContent=\"space-between\"\n          alignItems=\"baseline\"\n        >\n          <Badge\n            size=\"lg\"\n            borderRadius=\"full\"\n            px=\"2\"\n            onClick={() => setPriority(\"low\")}\n            cursor=\"pointer\"\n            colorScheme={priority === \"low\" ? \"blue\" : \"gray\"}\n          >\n            low\n          </Badge>\n          <Badge\n            size=\"lg\"\n            borderRadius=\"full\"\n            px=\"2\"\n            onClick={() => setPriority(\"medium\")}\n            cursor=\"pointer\"\n            colorScheme={priority === \"medium\" ? \"blue\" : \"gray\"}\n          >\n            medium\n          </Badge>\n          <Badge\n            size=\"lg\"\n            borderRadius=\"full\"\n            px=\"2\"\n            onClick={() => setPriority(\"high\")}\n            cursor=\"pointer\"\n            colorScheme={priority === \"high\" ? \"blue\" : \"gray\"}\n          >\n            high\n          </Badge>\n        </Box>\n        <Box mt=\"1\" fontWeight=\"semibold\" as=\"h4\" lineHeight=\"tight\">\n          {\" \"}\n          Select Category:\n        </Box>\n        <Box\n          d=\"flex\"\n          mt=\"2\"\n          justifyContent=\"space-between\"\n          alignItems=\"baseline\"\n        >\n          <Badge\n            borderRadius=\"full\"\n            px=\"2\"\n            onClick={() => setCategory(\"bug\")}\n            cursor=\"pointer\"\n            colorScheme={category === \"bug\" ? \"blue\" : \"gray\"}\n          >\n            Bug\n          </Badge>\n          <Badge\n            borderRadius=\"full\"\n            px=\"2\"\n            onClick={() => setCategory(\"documentation\")}\n            cursor=\"pointer\"\n            colorScheme={category === \"documentation\" ? \"blue\" : \"gray\"}\n          >\n            Documentation\n          </Badge>\n          <Badge\n            borderRadius=\"full\"\n            px=\"2\"\n            onClick={() => setCategory(\"enhancement\")}\n            cursor=\"pointer\"\n            colorScheme={category === \"enhancement\" ? \"blue\" : \"gray\"}\n          >\n            Enhancement\n          </Badge>\n        </Box>\n        <Box d=\"flex\" justifyContent=\"space-between\" mt=\"5\">\n          <Button color=\"black\" colorScheme=\"gray\" onClick={handleCancel}>\n            Cancel\n          </Button>\n          <Button colorScheme=\"green\" isLoading={loading} onClick={handleSave}>\n            Save\n          </Button>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default NewTask;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Flex,\n  Text,\n  Heading,\n  FormControl,\n  FormLabel,\n  Switch,\n  Button,\n} from \"@chakra-ui/react\";\nimport { EditIcon } from \"@chakra-ui/icons\";\nimport _ from \"lodash\";\nimport axios from \"axios\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport Task from \"../tasks/Task\";\nimport Header from \"../Header\";\nimport NewTask from \"../tasks/NewTask\";\nimport ControlledInput from \"../helpers/ControlledInput\";\n\nconst Project = (props) => {\n  const [project, setProject] = useState({});\n  const [tasks, setTasks] = useState([]);\n  const [newTaskFormOpen, setNewTaskFormOpen] = useState(false);\n  const [refetchData, setRefetchData] = useState(false);\n  const match = useRouteMatch(\"/projects/:id\");\n  const [editMode, setEditMode] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [status, setStatus] = useState(\"ongoing\");\n  const [errors, setErrors] = useState({\n    title: \"Title is required!\",\n    description: \"Description is required!\",\n  });\n\n  const [submitClicked, setSubmitClicked] = useState(false);\n\n  const fetchData = async () => {\n    // fetch project\n    const projectRes = await axios.get(`/projects/${match.params.id}`, {\n      headers: {\n        token: localStorage.getItem(\"token\"),\n      },\n    });\n    // fetch tasks associated with this project\n    const tasksRes = await axios.get(\"/tasks/\", {\n      params: {\n        projectId: match.params.id,\n      },\n      headers: {\n        token: localStorage.getItem(\"token\"),\n      },\n    });\n\n    setProject(projectRes.data);\n    setTasks(tasksRes.data || []);\n    setTitle(projectRes.data.project_title);\n    setDescription(projectRes.data.project_description);\n    setRefetchData(false);\n  };\n\n  const handleCancel = () => {\n    setTitle(project.project_title);\n    setDescription(project.project_description);\n    setStatus(project.project_status);\n    setEditMode(false);\n  };\n\n  const handleSubmit = async () => {\n    try {\n      setSubmitClicked(true);\n      if (errors.title || errors.description) {\n        return;\n      }\n\n      const res = await axios.put(\n        `/projects/${match.params.id}`,\n        {\n          title: title,\n          description: description,\n          status: status,\n        },\n        {\n          headers: {\n            token: localStorage.getItem(\"token\"),\n          },\n        }\n      );\n\n      setProject(res.data);\n      setSubmitClicked(false);\n      setEditMode(false);\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  const renderTasksLitst = (tasks) => {\n    return tasks.map((task) => {\n      return <Task setRefetchData={setRefetchData} task={task} />;\n    });\n  };\n\n  const validateForm = () => {\n    const errTitle = title.length === 0 ? \"Title is required!\" : \"\";\n    const errDescription =\n      description.length === 0 ? \"Description is required!\" : \"\";\n    const newErrors = { title: errTitle, description: errDescription };\n    setErrors(newErrors);\n  };\n\n  useEffect(() => {\n    validateForm();\n  }, [title, description]);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (refetchData) {\n      fetchData();\n    }\n  }, [refetchData]);\n\n  if (_.isEmpty(project)) {\n    return <Heading>404 - Project not found</Heading>;\n  }\n\n  return (\n    <>\n      <Header\n        isSignedIn={props.isSignedIn}\n        setIsSignedIn={props.setIsSignedIn}\n      />\n      <Box mt=\"5\" pl=\"5\" pr=\"5\">\n        <Box\n          alignItems=\"flex-start\"\n          d=\"flex\"\n          borderRadius=\"10\"\n          padding=\"6\"\n          color=\"white\"\n          bg=\"gray.600\"\n        >\n          <Box>\n            {!editMode && (\n              <>\n                <Text fontSize=\"3xl\">{project.project_title}</Text>\n                <Text fontSize=\"2xl\">{project.project_description}</Text>\n                <Text fontSize=\"xl\">Status: {project.project_status}</Text>{\" \"}\n              </>\n            )}\n            {editMode && (\n              <Box>\n                <ControlledInput\n                  value={title}\n                  setValue={setTitle}\n                  type=\"text\"\n                  submitClicked={submitClicked}\n                  label=\"Title\"\n                  error={errors.title}\n                />\n                <ControlledInput\n                  value={description}\n                  setValue={setDescription}\n                  textarea={true}\n                  submitClicked={submitClicked}\n                  label=\"Description\"\n                  error={errors.description}\n                />\n                <FormControl display=\"flex\" alignItems=\"center\">\n                  <FormLabel mb=\"0\">Completed?</FormLabel>\n                  <Switch\n                    isChecked={status === \"ongoing\" ? false : true}\n                    onChange={() => {\n                      const newStatus =\n                        status === \"ongoing\" ? \"completed\" : \"ongoing\";\n                      console.log(\n                        \"status: \",\n                        status,\n                        \"new status: \",\n                        newStatus\n                      );\n                      setStatus(newStatus);\n                    }}\n                  />\n                </FormControl>\n                <Box d=\"flex\" justifyContent=\"space-between\" mt=\"5\">\n                  <Button\n                    color=\"black\"\n                    colorScheme=\"gray\"\n                    onClick={handleCancel}\n                  >\n                    Cancel\n                  </Button>\n                  <Button colorScheme=\"green\" onClick={handleSubmit}>\n                    Save\n                  </Button>\n                </Box>\n              </Box>\n            )}\n          </Box>\n          <EditIcon\n            cursor=\"pointer\"\n            onClick={() => {\n              setEditMode(true);\n            }}\n            color=\"gray.800\"\n            h={7}\n            w={7}\n          />\n        </Box>\n        <Box\n          borderColor=\"gray.600\"\n          borderWidth=\"2px\"\n          borderRadius=\"20\"\n          padding=\"2\"\n          bg={newTaskFormOpen ? \"gray.600\" : \"white\"}\n          w={{ sm: \"100%\", md: newTaskFormOpen ? \"50%\" : \"25%\" }}\n          mt=\"6\"\n          mb=\"3\"\n          ml=\"auto\"\n          mr=\"auto\"\n          _hover={\n            !newTaskFormOpen && {\n              cursor: \"text\",\n              bg: \"gray.100\",\n              borderColor: \"gray.100\",\n            }\n          }\n          onClick={() => {\n            if (!newTaskFormOpen) {\n              setNewTaskFormOpen(true);\n            }\n          }}\n        >\n          {!newTaskFormOpen && <Text>Create New Task</Text>}\n          {newTaskFormOpen && (\n            <NewTask\n              setRefetchData={setRefetchData}\n              projectId={project.project_id}\n              setNewTaskFormOpen={setNewTaskFormOpen}\n            />\n          )}\n        </Box>\n        <Flex alignItems=\"baseline\" flexWrap=\"wrap\">\n          {renderTasksLitst(tasks)}\n        </Flex>\n      </Box>\n    </>\n  );\n};\n\nexport default Project;\n","import React, { useEffect, useState } from \"react\";\nimport { Box } from \"@chakra-ui/react\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport Dashboard from \"./dashboard/Dashboard\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport history from \"../history\";\nimport Projects from \"./projects/Projects\";\nimport Project from \"./projects/Project\";\nimport axios from \"axios\";\n\nconst App = () => {\n  const verifyToken = async () => {\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      try {\n        const res = await axios.get(\"/auth/verify\", {\n          headers: {\n            token: token,\n          },\n        });\n      } catch (error) {\n        if (error.request.status === 403) {\n          localStorage.removeItem(\"token\");\n          setIsSignedIn(false);\n        }\n      }\n    }\n  };\n  const [isSignedIn, setIsSignedIn] = useState(\n    localStorage.getItem(\"token\") ? true : false\n  );\n\n  // check whether token has expired on app mount\n  useEffect(() => {\n    verifyToken();\n  }, []);\n\n  return (\n    <Box>\n      <Router history={history}>\n        <Switch>\n          <Route exact path=\"/\">\n            {isSignedIn && (\n              <Dashboard\n                isSignedIn={isSignedIn}\n                setIsSignedIn={setIsSignedIn}\n              />\n            )}\n            {!isSignedIn && (\n              <Login isSignedIn={isSignedIn} setIsSignedIn={setIsSignedIn} />\n            )}\n          </Route>\n          <Route exact path=\"/register\">\n            {isSignedIn && (\n              <Dashboard\n                isSignedIn={isSignedIn}\n                setIsSignedIn={setIsSignedIn}\n              />\n            )}\n            {!isSignedIn && (\n              <Register isSignedIn={isSignedIn} setIsSignedIn={setIsSignedIn} />\n            )}\n          </Route>\n          <Route exact path=\"/login\">\n            {isSignedIn && (\n              <Dashboard\n                isSignedIn={isSignedIn}\n                setIsSignedIn={setIsSignedIn}\n              />\n            )}\n            {!isSignedIn && (\n              <Login isSignedIn={isSignedIn} setIsSignedIn={setIsSignedIn} />\n            )}\n          </Route>\n          <Route exact path=\"/projects\">\n            {isSignedIn && (\n              <Projects isSignedIn={isSignedIn} setIsSignedIn={setIsSignedIn} />\n            )}\n            {!isSignedIn && (\n              <Login isSignedIn={isSignedIn} setIsSignedIn={setIsSignedIn} />\n            )}\n          </Route>\n          <Route exact path=\"/projects/:pid\">\n            {isSignedIn && (\n              <Project isSignedIn={isSignedIn} setIsSignedIn={setIsSignedIn} />\n            )}\n            {!isSignedIn && (\n              <Login isSignedIn={isSignedIn} setIsSignedIn={setIsSignedIn} />\n            )}\n          </Route>\n          <Route path=\"*\">\n            <>\n              <div>404 not found</div>\n            </>\n          </Route>\n        </Switch>\n      </Router>\n    </Box>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { ChakraProvider, extendTheme } from \"@chakra-ui/react\";\nimport { createBreakpoints } from \"@chakra-ui/theme-tools\";\n\nconst breakpoints = createBreakpoints({\n  sm: \"320px\",\n  md: \"768px\",\n  lg: \"960px\",\n  xl: \"1200px\",\n});\n\nconst theme = extendTheme({\n  breakpoints,\n});\n\nReactDOM.render(\n  <ChakraProvider theme={theme}>\n    <App />\n  </ChakraProvider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}